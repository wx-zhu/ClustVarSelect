% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SMD_parallel.R
\name{SMD_parallel}
\alias{SMD_parallel}
\title{Sparse Manifold Decomposition (SMD) with Power K-means}
\usage{
SMD_parallel(
  X,
  k_guess,
  trials = NULL,
  n_sub = NULL,
  prop_algo = "agglo",
  class_algo = "entropy",
  cluster_prior_min = NULL,
  z_score = TRUE,
  eta = 1.05,
  initial_centers = NULL,
  divergence = "euclidean",
  convergence_threshold = 5,
  seed = 1,
  max_iter = 1000,
  dim_reduction = "pca",
  n_cores = NULL
)
}
\arguments{
\item{X}{Numeric matrix with dimensions (number of data points) x (number of features)}

\item{k_guess}{Integer specifying best estimate of number of clusters present}

\item{trials}{Number of cluster proposals to average over in ensemble. Default: 2 * ncol(X)}

\item{n_sub}{Number of data points used in each proposal clustering. Default: 0.8 * nrow(X)}

\item{prop_algo}{Algorithm for constructing cluster proposals. Either "agglo" or "kmeans". If 'kmeans', uses power_kmeans_bregman. Default: "agglo"}

\item{class_algo}{Type of classifier used. Either "entropy" (decision trees) or "maxmargin" (L1-SVM). Default: "entropy"}

\item{cluster_prior_min}{Minimum number of clusters for proposals. Default: 3}

\item{z_score}{Logical indicating whether to return standardized scores. Default: TRUE}

\item{eta}{Power k-means learning rate parameter. Default: 1.05}

\item{initial_centers}{Matrix of initial cluster centers or NULL for random initialization}

\item{divergence}{Type of Bregman divergence: "euclidean", "kl", "itakura-saito", or "logistic"}

\item{convergence_threshold}{Number of iterations with unchanged assignments for convergence. Default: 5}

\item{seed}{Random seed for reproducibility. Default: 1}

\item{max_iter}{Maximum number of iterations for power k-means. Default: 1000}

\item{dim_reduction}{Dimension reduction method: "pca", "spectral", or "none". Default: "pca"}

\item{n_cores}{Number of CPU cores to use for parallel processing. Default: min(detectCores() - 1, 2)}
}
\value{
A ClustVarSelect object containing:
\itemize{
\item scores: Vector of feature importance scores
\item k_guess: Number of clusters used
\item prop_algo: Clustering algorithm used
\item class_algo: Classification algorithm used
\item params: List of parameters used including trials, n_sub, and other settings
}
}
\description{
Performs sparse manifold decomposition using power k-means clustering with Bregman
divergence for robust feature importance analysis in high-dimensional data, especially
for scRNA-seq data. Features are normalized before analysis and importance scores can
be standardized relative to shuffled data. Supports parallel processing for improved performance.
}
\details{
The function implements sparse manifold decomposition (SMD) combining power k-means clustering
with Bregman divergence for robust clustering. This method is particularly effective for
discovering discriminating features in high-dimensional biological data. For entropy-based
classification, it uses decision trees (rpart). For maxmargin classification, it uses
L1-penalized SVM.

The function leverages parallel processing through the parallel package to improve
computational efficiency. The number of cores can be specified via the n_cores parameter.
If not specified, it defaults to using one less than the available cores (up to a maximum
of 2 cores to be conservative). On Windows systems, parallel processing defaults to
sequential processing due to platform limitations.
}
\examples{
# Generate example data
set.seed(123)
X <- matrix(rnorm(1000), ncol = 20)

# Basic usage with default parallel processing
result <- SMD_parallel(X, k_guess = 3)

# Specify number of cores for parallel processing
result <- SMD_parallel(X, k_guess = 3, n_cores = 4)

# With custom parameters
result <- SMD_parallel(X,
  k_guess = 3,
  prop_algo = "kmeans",
  divergence = "euclidean",
  dim_reduction = "pca",
  n_cores = 2
)

}
\references{
Melton, S., & Ramanathan, S. (2021). Discovering a sparse set of pairwise
discriminating features in high-dimensional data. Bioinformatics (Oxford, England),
37(2), 202-212. https://doi.org/10.1093/bioinformatics/btaa690

Vellal, A., Eldan, R., Zaslavsky, M., & Roeder, K. (2022).
Bregman Power k-Means for Clustering Exponential Family Data.
In International Conference on Machine Learning (pp. 22083-22101). PMLR.
https://proceedings.mlr.press/v162/vellal22a/vellal22a.pdf
}
